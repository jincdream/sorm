<template name="input">
  <input
    class="{{'fld_input ' + (props.className || '') + (isError ? ' fld_input_error' : '')}}"
    style="{{props.style}}"
    controlled="{{false}}"
    value="{{uiValue}}"
    onInput="onChange"
    onBlur="onBlur"
    onFocus="onFocus"
    onConfirm="onConfirm"
    type="{{props.type}}"
    password="{{props.password}}"
    placeholder="{{props.placeholder || '请输入'}}"
    placeholder-style="{{props['placeholder-style']}}"
    placeholder-class="{{props['placeholder-class']+' fld_placeholder'}}"
    disabled="{{props.disabled === true ? true : false}}"
    maxlength="{{props.maxlength}}"
    focus="{{props.focus}}"
    confirm-type="{{props['confirm-type']}}"
    confirm-hold="{{props['confirm-hold']}}"
    cursor="{{props.cursor}}"
    selection-start="{{props['selection-start']}}"
    selection-end="{{props['selection-end']}}"
    randomNumber="{{props.randomNumber}}"
  />
</template>

<template name="textarea">
  <textarea
    class="{{'fld_textarea ' + (props.className || '') + (isError ? ' fld_input_error' : '')}}"
    style="{{props.style}}"
    value="{{uiValue}}"
    controlled="{{false}}"
    onInput="onChange"
    onBlur="onBlur"
    onFocus="onFocus"
    onConfirm="onConfirm"
    placeholder="{{props.placeholder || '请输入'}}"
    placeholder-style="{{props['placeholder-style']}}"
    placeholder-class="{{props['placeholder-class']}}"
    auto-height="{{props['auto-height']}}"
    disabled="{{props.disabled === true ? true : false}}"
    maxlength="{{props.maxlength}}"
    focus="{{props.focus}}"
  />
</template>

<template name="radio-group">
  <s-radio
    key="{{fieldKey}}"
    onChange="onChange"
    value="{{uiValue}}"
    props="{{props}}"/>
</template>

<template name="checkbox-group">
  <s-checkbox
    key="{{fieldKey}}"
    onChange="onChange"
    value="{{uiValue}}"
    props="{{props}}"
  />
</template>

<template name="switch">
  <switch
    class="{{props.className}}"
    onChange="onChange"
    color="{{color}}"
    disabled="{{props.disabled}}"
    checked="{{uiValue}}"
    aria-label="{{props['aria-label']}}" />
</template>

<template name="slider">
  <!-- padding: 滑块圆心在直线终点，所以需要额外的宽度 -->
  <view
    style="{{`position:relative;overflow:hidden;padding:2px ${(props['handle-size'] || 22 + 2) / 2}px`}}">
    <slider
      key="{{fieldKey}}"
      class="{{props.className}}"
      style="{{props.style}}"
      value="{{uiValue || 0}}"
      onChange="onChange"
      onChanging="onChanging"
      min="{{props.min}}"
      step="{{props.step}}"
      max="{{props.max}}"
      disabled="{{props.disabled}}"
      active-color="{{props['active-color']}}"
      background-color="{{props['background-color']}}"
      track-size="{{props['track-size']}}"
      handle-size="{{props['handle-size']}}"
      handle-color="{{props['handle-color']}}"
      show-value="{{props['show-value']}}"/>
  </view>
</template>

<template name="picker">
  <s-picker
    key="{{fieldKey}}"
    onChange="onChange"
    value="{{uiValue || []}}"
    props="{{props}}"/>
</template>

<template name="date-picker">
  <date-picker
    key="{{fieldKey}}"
    onChange="onChange"
    value="{{uiValue}}"
    props="{{props}}"
  />
</template>

<view class="fld" a:if="{{cprops.visible}}">
  <view class="fld_wrap">
    <view class="fld_label">
      <text class="fld_lb_text fld_lb_wran" style="color:red;">{{required? '*': ''}}</text>
      <text class="fld_lb_text">{{label}}</text>
    </view>
    <view class="fld_com">
      <template is="{{cname}}" data="{{
        props: cprops,
        isError: isError,
        onChange:onChange,
        uiValue: uiValue,
        fieldKey: fieldKey
      }}" />
    </view>
  </view>
  <view class="fld_error" a:if="{{isError}}">
    <text class="fld_err_text" a:for="{{errors}}">{{item}}</text>
  </view>
</view>